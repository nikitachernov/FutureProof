{"name":"Futureproof","tagline":"Ruby concurrency extensions","body":"# FutureProof\r\n\r\nFutureProof provides concurrency extensions for Ruby.\r\n\r\n[![Build Status](https://travis-ci.org/nikitachernov/FutureProof.png)](https://travis-ci.org/nikitachernov/FutureProof)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'future_proof'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install future_proof\r\n\r\n## Usage\r\n\r\n### Future\r\n\r\n    future = FutureProof::Future.new { |a, b| a + b }\r\n\r\n    future.call(1, 2) # => executes in a thread\r\n\r\n    future.value # => returns value when ready\r\n\r\n### ThreadPool\r\n\r\n    thread_pool = FutureProof::ThreadPool.new(5)\r\n\r\n    10.times do |i|\r\n      thread_pool.submit i, i + 1 do |a, b|\r\n        a + b\r\n      end\r\n    end\r\n\r\n    thread_pool.perform # executes 10 procs in 5 threads\r\n\r\n    thread_pool.values # releases threads and returns values\r\n\r\n## Exceptions\r\n\r\n  If exception happens inside a thread it doesn't affect the whole process.\r\n  Exception is raised when accessing specific value:\r\n      thread_pool.values[3] # => raises exception\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}